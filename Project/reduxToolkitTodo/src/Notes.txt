// ======================= Todo App by Redux Toolkit =================

How to install redux toolkit ----------

Goto - https://redux-toolkit.js.org/introduction/getting-started

run these two commands - 

npm install @reduxjs/toolkit    -- this is for redux toolkit install
npm install react-redux     -- this is for to make connection between react and redux

Now What's Include redux -------
Redux Toolkit includes these below APIs:
configureStore(): wraps createStore to provide simplified configuration options and good defaults. It can automatically combine your slice reducers, adds whatever Redux middleware you supply, includes redux-thunk by default, and enables use of the Redux DevTools Extension.
createReducer(): that lets you supply a lookup table of action types to case reducer functions, rather than writing switch statements. In addition, it automatically uses the immer library to let you write simpler immutable updates with normal mutative code, like state.todos[3].completed = true.
createAction(): generates an action creator function for the given action type string.
createSlice(): accepts an object of reducer functions, a slice name, and an initial state value, and automatically generates a slice reducer with corresponding action creators and action types.
combineSlices(): combines multiple slices into a single reducer, and allows "lazy loading" of slices after initialisation.
createAsyncThunk: accepts an action type string and a function that returns a promise, and generates a thunk that dispatches pending/fulfilled/rejected action types based on that promise
createEntityAdapter: generates a set of reusable reducers and selectors to manage normalized data in the store
The createSelector utility from the Reselect library, re-exported for ease of use.


All these APIs we'll Include in our app step by step --

create a folder called app under src folder -> create a js file store.js 
import API configureStore() and store into a variable and export so that later we can use..

import API createSlice() and export also.
create a folder features - create a file todoSlice.js -- here Slice is just a naming convention we can give any name
since we're using Slice API that's why.

it will accept some parameters - name , initialState , reducer(it is a object)

Reducers: While you've defined the addTodo and removeTodo reducer functions, they are currently empty. 
Typically, these functions would modify the state based on the action parameter.

Now create components folder under src folder
inside two files - addTodo.jsx and todos.jsx - both will have functionality of app. means how ww'll send data and remove/update data

addTodo,.jsx -- import dispatch and create  a useState for input.
write addTodoHandler method functionality

Todos.jsx -- select state.todos using useSelector and loop on todo so inside <li> so that every time
it can add or remove and also add a delete button ...